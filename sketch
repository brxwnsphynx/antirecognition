let faceapi;
let video;
let detections;

function setup() {
  let canvasContainer = document.getElementById('canvas-container');
  let canvas = createCanvas(640, 480);
  canvas.parent(canvasContainer);
  
  video = createCapture(VIDEO);
  video.size(640, 480);
  video.hide();
  faceapi = ml5.faceApi(video, modelReady);
}

function modelReady() {
  faceapi.detect(gotResults);
}

function gotResults(err, result) {
  if (err) {
    console.error(err);
    return;
  }
  detections = result;
  background(255);
  image(video, 0, 0, width, height);
  if (detections) {
    for (let i = 0; i < detections.length; i++) {
      const alignedRect = detections[i].alignedRect;
      const x = alignedRect._box._x;
      const y = alignedRect._box._y;
      const boxWidth = alignedRect._box._width;
      const boxHeight = alignedRect._box._height;
      let faceImage = video.get(x, y, boxWidth, boxHeight);
      faceImage.filter(BLUR, 21);
      image(faceImage, x, y, boxWidth, boxHeight);
    }
  }
  faceapi.detect(gotResults);
}

function draw() {
  // Add computational animation for the background of the webcam window
  let backgroundColor = map(sin(frameCount * 0.05), -1, 1, 150, 255);
  background(backgroundColor, 100);
}
